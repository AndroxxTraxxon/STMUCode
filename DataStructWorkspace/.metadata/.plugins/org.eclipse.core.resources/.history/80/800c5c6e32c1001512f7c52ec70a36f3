/*
 * my_string.c
 *
 *  Created on: Jan 22, 2016
 *      Author: david
 */
#include "my_string.h"
my_string Create( char *ary, int length){
	my_string str;
	str.length = length;
	str.capacity = length;
	str.element = malloc(sizeof(char) * length);
	memcpy(ary, str.element, length);
	return str;
}
void Destroy(my_string str){
	free(str.element);
}
void Print(my_string str){
	for(int i = 0; i < str.length; i++){
		printf("%c", str.element[i]);
	}
}
my_string Concatenate(my_string str1, my_string str2){
	my_string out = Create("", str1.length + str2.length);
	memcpy(str1.element, out.element[0], str1.length);
	memcpy(str2.element, out.element[str1.length], str2.length);
	return out;
}


void Copy(my_string src, my_string dest){
	memcpy(src.element, dest.element, min(src.length, dest.capacity));
}
int Compare(my_string str1, my_string str2){
	int comp = 0;
	for(int i = 0; i < min(str1.length, str2.length); i++){
		comp = str1.element[i]-str2.element[i];
		if(comp != 0) break;
	}
	return comp;
}
int Length(my_string str){
	return str.length;
}
int Capacity(my_string str){
	return str.capacity;
}

int max(int a, int b){
	return(a > b)? a : b;
}
int min(int a, int b){
	return(a < b)? a : b;
}
